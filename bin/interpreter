#!/usr/bin/env ruby

plot_path = "../data/story1/plot"
chars_file = "../data/story1/char" 

def getChars(chars_file)
	prev = ""

	chars = Hash.new()
	container = Hash.new()

	File.open(chars_file, "r").each_line{ |line|
		line = line.chomp
		if line.strip.start_with? "$"
			if container.size != 0 
				chars[prev] = container
				container = Hash.new()
			end
			prev = line.strip
		elsif line.include? "|"
			tokens = line.split("|")
      key = tokens[0].strip
      case container.has_key? key
      when false
		  	container[key] = tokens[1]
      when true
		  	container[key] += "\n          | "+tokens[1]
      end
		end
	}
	chars[prev] = container
  chars
end


operation = ARGV[0]

def fit(tx,i)
  diff = i - tx.size
  if diff > 0 
		(0..diff-1).each{ |x|
			tx+=" "
		}
  elsif diff < 0
    tmp = ""
    (0..i-3).each{  |x|
      tmp += tx[x]
    }
    tx = tmp + ".."
  end
  tx
end


def genPlate(file, chars_file)
  f = File.open(file, "a") 
  f.puts "----------chars-----------"
  f.puts getChars(chars_file).keys 
  f.puts "--------------------------"
  f.puts "#ki"
  f.puts
  f.puts "#so"
  f.puts
  f.puts "#ten"
  f.puts
  f.puts "#kez"
  f.puts
  f.puts "(what is entertaining)"
  f.close
end

case operation
when "init"
    genPlate plot_path, chars_file
when "chars"
  puts
  puts "----chars----"
  puts getChars(chars_file).keys
  puts
when "char"
  id = "$#{ARGV[1]}"
  if ARGV.size == 2
    getChars(chars_file)[id].each{ |k,v|
      puts "#{fit(k,10)}| #{v}"
    }
  elsif ARGV.size == 3
    puts getChars(chars_file)[id][ARGV[2]]
  end 
end


